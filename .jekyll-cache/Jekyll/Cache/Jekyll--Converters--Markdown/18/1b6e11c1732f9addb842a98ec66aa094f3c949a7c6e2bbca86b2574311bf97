I"Õ(<p>When publishing a paper, it is often required to generate a single file for each image in the manuscript, which can be rather technically difficult when complicated figures are composed of separate plots or additional latex annotations have been added using <code class="language-plaintext highlighter-rouge">overpic</code> or similar. An example of a particularly complicated figure from a recent paper is</p>

<figure class="highlight"><pre><code class="language-latex" data-lang="latex"><span class="nt">\begin{figure}</span>
  <span class="nt">\begin{overpic}</span>[width=39pc]<span class="p">{</span>av<span class="p">_</span>tt<span class="p">_</span>DJF<span class="p">_</span>JJA<span class="p">}</span>
    <span class="k">\put</span>(4,30)<span class="p">{</span>a) i.<span class="p">}</span>
    <span class="k">\put</span>(46,30)<span class="p">{</span>ii.<span class="p">}</span>
    <span class="k">\put</span>(36,20)<span class="p">{</span><span class="k">\textsf</span><span class="p">{</span><span class="k">\LARGE</span> A<span class="p">}}</span>
    <span class="k">\put</span>(8,20)<span class="p">{</span><span class="k">\textsf</span><span class="p">{</span><span class="k">\LARGE</span> B<span class="p">}}</span>
    <span class="k">\put</span>(16,20)<span class="p">{</span><span class="k">\textsf</span><span class="p">{</span><span class="k">\LARGE</span> C<span class="p">}}</span>
  <span class="nt">\end{overpic}</span>
  <span class="nt">\begin{overpic}</span>[width=39pc]<span class="p">{</span>av<span class="p">_</span>acc<span class="p">_</span>DJF<span class="p">_</span>JJA<span class="p">}</span>
    <span class="k">\put</span>(4,30)<span class="p">{</span>b) i.<span class="p">}</span>
    <span class="k">\put</span>(46,30)<span class="p">{</span>ii.<span class="p">}</span>
  <span class="nt">\end{overpic}</span>
  <span class="k">\caption</span><span class="p">{</span>  .... <span class="p">}</span>
<span class="nt">\end{figure}</span></code></pre></figure>

<p>This figure would need stitching together somehow before submission. Previously I had done this by hand in Inkscape but for this paper I decided to try and write a script to automate things. The following script automatically locates figures in a latex document (here called <code class="language-plaintext highlighter-rouge">mixing.tex</code>) and renders them as separate latex documents using <code class="language-plaintext highlighter-rouge">pdflatex</code>. It then crops the padding using <code class="language-plaintext highlighter-rouge">gs</code> resulting in a sequence of <code class="language-plaintext highlighter-rouge">pdf</code> image files named <code class="language-plaintext highlighter-rouge">figure01.pdf</code>, <code class="language-plaintext highlighter-rouge">figure02.pdf</code>, etc. A new latex document is also produced (here <code class="language-plaintext highlighter-rouge">mixing_pub.tex</code>) where suitable <code class="language-plaintext highlighter-rouge">\includegraphics{figure01}</code> etc replace the figure latex in the original document.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">re</span>
<span class="kn">import</span> <span class="nn">os</span>

<span class="k">def</span> <span class="nf">convert_image</span><span class="p">(</span><span class="n">content</span><span class="p">,</span> <span class="n">out</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
    <span class="n">latex</span> <span class="o">=</span> <span class="s">r'''\documentclass[12pt]{article}
    \usepackage{overpic}
    \usepackage{color}
    \usepackage[top=1in,bottom=1in,left=1in,right=1in]{geometry}
    \begin{document}
    \pagestyle{empty}
    \begin{figure}
    \noindent %s
    \end{figure}
    \end{document}
'''</span> <span class="o">%</span> <span class="n">content</span>
    <span class="nb">open</span><span class="p">(</span><span class="s">'temp.tex'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">).</span><span class="n">write</span><span class="p">(</span><span class="n">latex</span><span class="p">)</span>
    <span class="n">os</span><span class="p">.</span><span class="n">system</span><span class="p">(</span><span class="s">'pdflatex temp.tex'</span><span class="p">)</span>
    <span class="n">os</span><span class="p">.</span><span class="n">system</span><span class="p">(</span><span class="s">'gs -q -dBATCH -dNOPAUSE -sDEVICE=bbox temp.pdf 2&gt;&amp;1 '</span>
              <span class="s">'| grep -v HiRes &gt; temp.bb'</span><span class="p">)</span>
    <span class="n">bb</span> <span class="o">=</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="nb">open</span><span class="p">(</span><span class="s">'temp.bb'</span><span class="p">,</span> <span class="s">'r'</span><span class="p">).</span><span class="n">read</span><span class="p">().</span><span class="n">split</span><span class="p">()[</span><span class="mi">1</span><span class="p">:</span><span class="mi">5</span><span class="p">]]</span>
    <span class="k">print</span> <span class="n">bb</span>
    <span class="n">l</span><span class="p">,</span> <span class="n">t</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="n">bb</span>
    <span class="n">l</span> <span class="o">-=</span> <span class="n">padding</span>
    <span class="n">r</span> <span class="o">+=</span> <span class="n">padding</span>
    <span class="n">t</span> <span class="o">-=</span> <span class="n">padding</span>
    <span class="n">b</span> <span class="o">+=</span> <span class="n">padding</span>
    <span class="n">os</span><span class="p">.</span><span class="n">system</span><span class="p">((</span><span class="s">'gs '</span>
               <span class="s">'-o temp.cropped.pdf '</span>
               <span class="s">'-sDEVICE=pdfwrite '</span>
               <span class="s">'-c "[/CropBox [%d %d %d %d] /PAGES pdfmark" '</span>
               <span class="s">'-f temp.pdf'</span><span class="p">)</span> <span class="o">%</span> <span class="p">(</span><span class="n">l</span><span class="p">,</span> <span class="n">t</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">b</span><span class="p">))</span>
    <span class="n">os</span><span class="p">.</span><span class="n">system</span><span class="p">(</span><span class="s">'mv temp.cropped.pdf %s'</span> <span class="o">%</span> <span class="n">out</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Replacer</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="k">def</span> <span class="nf">replacement</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">mo</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="n">content</span> <span class="o">=</span> <span class="n">mo</span><span class="p">.</span><span class="n">group</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
        <span class="n">filename</span> <span class="o">=</span> <span class="s">'publication-ready/figure%0.2d.pdf'</span> <span class="o">%</span> <span class="bp">self</span><span class="p">.</span><span class="n">count</span>
        <span class="k">print</span> <span class="n">filename</span>
        <span class="n">convert_image</span><span class="p">(</span><span class="n">content</span><span class="p">,</span> <span class="n">filename</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>
        <span class="k">return</span> <span class="s">r"\begin{figure}\includegraphics{"</span> \
            <span class="o">+</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">basename</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span> <span class="o">+</span> <span class="s">"}\caption"</span>


<span class="n">data</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">'mixing.tex'</span><span class="p">,</span> <span class="s">'r'</span><span class="p">).</span><span class="n">read</span><span class="p">()</span>
<span class="n">rep</span> <span class="o">=</span> <span class="n">Replacer</span><span class="p">()</span>
<span class="n">newdata</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="n">sub</span><span class="p">(</span><span class="s">r"\\begin{figure}(\[.*?\])?(.*?)\\caption"</span><span class="p">,</span>
                 <span class="n">rep</span><span class="p">.</span><span class="n">replacement</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> 
                 <span class="n">flags</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="n">MULTILINE</span><span class="o">|</span><span class="n">re</span><span class="p">.</span><span class="n">DOTALL</span><span class="p">)</span>
<span class="nb">open</span><span class="p">(</span><span class="s">'mixing-pub.tex'</span><span class="p">,</span> <span class="s">'r'</span><span class="p">).</span><span class="n">write</span><span class="p">()</span></code></pre></figure>

<p>This setup works well, and cuts out a lot of otherwise tedious work. It requires ghostscript and should work with any latex distribution (Iâm using TexLive 2012 on Fedora 17.) You might need to add stuff to the preamble in the <code class="language-plaintext highlighter-rouge">convert_image</code> function if you use other packages.</p>
:ET